name: Build and Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    environment: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install `pnpm`
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Get `pnpm` store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup `pnpm` cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Setup `vite` cache
        uses: actions/cache@v3
        with:
          path: node_modules/.vite
          key: ${{ runner.os }}-vite
          restore-keys: ${{ runner.os }}-vite
      - name: Build project
        env:
          VITE_GITHUB_CLIENT_ID: ${{ secrets.VITE_GITHUB_CLIENT_ID }}
          VITE_GITHUB_OAUTH_CODE_URL: ${{ secrets.VITE_GITHUB_OAUTH_CODE_URL }}
          VITE_GITHUB_OAUTH_URL: ${{ vars.VITE_GITHUB_OAUTH_URL }}
          VITE_GITHUB_API_URL: ${{ vars.VITE_GITHUB_API_URL }}
          VITE_GITHUB_REPOSITORY: ${{ vars.VITE_GITHUB_REPOSITORY }}
          VITE_GITHUB_OWNER: ${{ vars.VITE_GITHUB_OWNER }}
          VITE_GITHUB_CONTENT_COMMITER_NAME: ${{ vars.VITE_GITHUB_CONTENT_COMMITER_NAME }}
          VITE_GITHUB_CONTENT_COMMITER_EMAIL: ${{ vars.VITE_GITHUB_CONTENT_COMMITER_EMAIL }}
          VITE_GITHUB_COMMENT_COMMITER_NAME: ${{ vars.VITE_GITHUB_COMMENT_COMMITER_NAME }}
          VITE_GITHUB_COMMENT_COMMITER_EMAIL: ${{ vars.VITE_GITHUB_COMMENT_COMMITER_EMAIL }}
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
